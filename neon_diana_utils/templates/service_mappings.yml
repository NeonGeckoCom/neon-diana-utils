neon-rabbitmq:
  docker_compose:
    container_name: neon-rabbitmq
    image: rabbitmq:3-management
    restart: always
    networks:
      - mq-backend
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_CONFIG_FILE=/config/rabbitmq.conf
    volumes:
      - config:/config
neon-api-proxy:
  mq_service_name: neon_api_connector
  mq_username: neon_api
  mq_user_permissions:
    neon_api:
      /neon_api:
        read: .*
        write: .*
        configure: .*
    neon_api_utils:
      /neon_api:
        read: ./*
        write: ./*
        configure: ./*
  mq_vhosts:
    - /neon_api
  docker_compose:
    container_name: neon-api-proxy
    image: ghcr.io/neongeckocom/neon_api_proxy:dev
    restart: always
    networks:
      - mq-backend
    labels:
      kompose.service.type: headless
    volumes:
      - config:/config
neon-brands-service:
  mq_service_name: neon_coupon_connector
  mq_username: neon_coupons
  mq_user_permissions:
    neon_coupons:
      /neon_coupons:
        read: .*
        write: .*
        configure: .*
    neon_api_utils:
      /neon_coupons:
        read: .*
        write: .*
        configure: .*
  mq_vhosts:
    - /neon_coupons
  docker_compose:
    container_name: neon-brands-service
    image: ghcr.io/neongeckocom/neon_brands_service:dev
    restart: always
    networks:
      - mq-backend
    labels:
      kompose.service.type: headless
    volumes:
      - config:/config
neon-email-proxy:
  mq_service_name: neon_email_proxy
  mq_username: neon_email
  mq_user_permissions:
    neon_email:
      /neon_emails:
        read: .*
        write: .*
        configure: .*
    neon_api_utils:
      /neon_emails:
        read: "^(?!neon_emails_input).*"
        write: .*
        configure: .*
  mq_vhosts:
    - /neon_emails
  docker_compose:
    container_name: neon-email-proxy
    image: ghcr.io/neongeckocom/neon_email_proxy:dev
    restart: always
    networks:
      - mq-backend
    labels:
      kompose.service.type: headless
    volumes:
      - config:/config
neon-script-parser:
  mq_service_name: neon_script_parser_service
  mq_username: neon_script_parser
  mq_user_permissions:
    neon_script_parser:
      /neon_script_parser:
        read: .*
        write: .*
        configure: .*
    neon_api_utils:
      /neon_script_parser:
        read: .*
        write: .*
        configure: .*
  mq_vhosts:
    - /neon_script_parser

  docker_compose:
    container_name: neon-script-parser
    image: ghcr.io/neongeckocom/neon-script-parser:dev
    restart: always
    networks:
      - mq-backend
    labels:
      kompose.service.type: headless
    volumes:
      - config:/config
neon-metrics-service:
  mq_service_name: neon_metrics_connector
  mq_username: neon_metrics
  mq_user_permissions:
    neon_metrics:
      /neon_metrics:
        read: .*
        write: .*
        configure: .*
    neon_api_utils:
      /neon_metrics:
        read: ""
        write: .*
        configure: .*
  mq_vhosts:
    - /neon_metrics
  docker_compose:
    container_name: neon-metrics-service
    image: ghcr.io/neongeckocom/neon_metrics_service:dev
    restart: always
    networks:
      - mq-backend
    labels:
      kompose.service.type: headless
    volumes:
      - config:/config
      - metrics:/metrics
